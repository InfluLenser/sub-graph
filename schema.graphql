enum JobStatus {
  Filled
  Confirmed
  Rejected
  Finished
  Opened
}

enum PaymentType {
  Release
  Reimburse
}

type Job @entity {
  id: ID! # job token id
  createdAt: BigInt # timestamp of block creation
  updatedAt: BigInt # timestamp of the last change
  status: JobStatus! # job status
  employer: User # job employer
  employee: User # job employee
  sender: User # user that created the job (employer or employee)
  recipient: User # other participating user (employee or employer)
  uri: String # metadata URI of job
  transactionId: String # Escrow transaction id of job
  proposals: [Proposal!] @derivedFrom(field: "job") # proposals for this job
}

type Review @entity {
  id: ID! # review token id
  job: Job! # job this review is for
  to: User! # reviewed user
  uri: String! # metadata URI of review
}

type User @entity {
  id: ID! # user token id
  address: String! # wallet address of user
  uri: String! # metadata URI of profile
  handle: String! # handle of user
  withPoh: Boolean! # whether user has proof of identity
  numReviews: BigInt! # number of reviews user has received
  rating: BigDecimal! # average rating from reviews user has received
  reviews: [Review!] @derivedFrom(field: "to") # reviews of user
  employerJobs: [Job!] @derivedFrom(field: "employer") # jobs user is an employer for
  employeeJobs: [Job!] @derivedFrom(field: "employee") # jobs user is an employee for
}

enum ProposalStatus {
  Pending
  Validated
  Rejected
}

type Proposal @entity {
  id: ID! # concatenation of jobId + employee TalentLayerId
  job: Job! # job entity
  createdAt: BigInt # timestamp of block creation
  updatedAt: BigInt # timestamp of the last change
  status: ProposalStatus! # Proposal status
  employee: User # Proposal employee
  rateToken: Bytes # Rate token
  rateAmount: BigInt # Rate amount
  uri: String! # metadata URI of job
}

#Payment sender will always be the Escrow Contract
type Payment @entity {
  id: ID! # autogenerated id
  job: Job! # job entity
  amount: BigInt # payment amount
  rateToken: Bytes # Rate token
  paymentType: String # Whether the payment is a release or a reimburment
  transactionHash: String # Transaction hash of the transfer
}
