enum JobStatus {
  Initialized
  Confirmed
  Rejected
  Finished
}

type Job @entity {
  id: ID! # job token id
  status: JobStatus! # job status
  employer: User # job employer
  employee: User # job employee
  sender: User # user that created the job (employer or employee)
  recipient: User # other participating user (employee or employer)
  uri: String # metadata URI of job
}

type Review @entity {
  id: ID! # review token id
  job: Job! # job this review is for
  to: User! # reviewed user
  uri: String! # metadata URI of review
}

type User @entity {
  id: ID! # user token id
  address: String! # wallet address of user
  uri: String! # metadata URI of profile
  handle: String! # handle of user
  withPoh: Boolean! # whether user has proof of identity
  reviews: [Review!] @derivedFrom(field: "to") # reviews of user
  employerJobs: [Job!] @derivedFrom(field: "employer") # jobs user is an employer for
  employeeJobs: [Job!] @derivedFrom(field: "employee") # jobs user is an employee for
}
