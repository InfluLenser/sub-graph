// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class CreateJob extends ethereum.Event {
  get params(): CreateJob__Params {
    return new CreateJob__Params(this);
  }
}

export class CreateJob__Params {
  _event: CreateJob;

  constructor(event: CreateJob) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get employerId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get employeeId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get initiatorId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get jobDataUri(): string {
    return this._event.parameters[4].value.toString();
  }
}

export class JobRegistry__getJobResultValue0Struct extends ethereum.Tuple {
  get status(): i32 {
    return this[0].toI32();
  }

  get employerId(): BigInt {
    return this[1].toBigInt();
  }

  get employeeId(): BigInt {
    return this[2].toBigInt();
  }

  get initiatorId(): BigInt {
    return this[3].toBigInt();
  }

  get jobDataUri(): string {
    return this[4].toString();
  }
}

export class JobRegistry__jobsResult {
  value0: i32;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: string;

  constructor(
    value0: i32,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: string
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set(
      "value0",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value0))
    );
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromString(this.value4));
    return map;
  }
}

export class JobRegistry extends ethereum.SmartContract {
  static bind(address: Address): JobRegistry {
    return new JobRegistry("JobRegistry", address);
  }

  createJobFromEmployee(_employerId: BigInt, _jobDataUri: string): BigInt {
    let result = super.call(
      "createJobFromEmployee",
      "createJobFromEmployee(uint256,string):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_employerId),
        ethereum.Value.fromString(_jobDataUri)
      ]
    );

    return result[0].toBigInt();
  }

  try_createJobFromEmployee(
    _employerId: BigInt,
    _jobDataUri: string
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "createJobFromEmployee",
      "createJobFromEmployee(uint256,string):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_employerId),
        ethereum.Value.fromString(_jobDataUri)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  createJobFromEmployer(_employeeId: BigInt, _jobDataUri: string): BigInt {
    let result = super.call(
      "createJobFromEmployer",
      "createJobFromEmployer(uint256,string):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_employeeId),
        ethereum.Value.fromString(_jobDataUri)
      ]
    );

    return result[0].toBigInt();
  }

  try_createJobFromEmployer(
    _employeeId: BigInt,
    _jobDataUri: string
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "createJobFromEmployer",
      "createJobFromEmployer(uint256,string):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_employeeId),
        ethereum.Value.fromString(_jobDataUri)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getJob(_jobId: BigInt): JobRegistry__getJobResultValue0Struct {
    let result = super.call(
      "getJob",
      "getJob(uint256):((uint8,uint256,uint256,uint256,string))",
      [ethereum.Value.fromUnsignedBigInt(_jobId)]
    );

    return changetype<JobRegistry__getJobResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getJob(
    _jobId: BigInt
  ): ethereum.CallResult<JobRegistry__getJobResultValue0Struct> {
    let result = super.tryCall(
      "getJob",
      "getJob(uint256):((uint8,uint256,uint256,uint256,string))",
      [ethereum.Value.fromUnsignedBigInt(_jobId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<JobRegistry__getJobResultValue0Struct>(value[0].toTuple())
    );
  }

  jobs(param0: BigInt): JobRegistry__jobsResult {
    let result = super.call(
      "jobs",
      "jobs(uint256):(uint8,uint256,uint256,uint256,string)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new JobRegistry__jobsResult(
      result[0].toI32(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toString()
    );
  }

  try_jobs(param0: BigInt): ethereum.CallResult<JobRegistry__jobsResult> {
    let result = super.tryCall(
      "jobs",
      "jobs(uint256):(uint8,uint256,uint256,uint256,string)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new JobRegistry__jobsResult(
        value[0].toI32(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toString()
      )
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _talentLayerIdAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConfirmJobCall extends ethereum.Call {
  get inputs(): ConfirmJobCall__Inputs {
    return new ConfirmJobCall__Inputs(this);
  }

  get outputs(): ConfirmJobCall__Outputs {
    return new ConfirmJobCall__Outputs(this);
  }
}

export class ConfirmJobCall__Inputs {
  _call: ConfirmJobCall;

  constructor(call: ConfirmJobCall) {
    this._call = call;
  }

  get _jobId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ConfirmJobCall__Outputs {
  _call: ConfirmJobCall;

  constructor(call: ConfirmJobCall) {
    this._call = call;
  }
}

export class CreateJobFromEmployeeCall extends ethereum.Call {
  get inputs(): CreateJobFromEmployeeCall__Inputs {
    return new CreateJobFromEmployeeCall__Inputs(this);
  }

  get outputs(): CreateJobFromEmployeeCall__Outputs {
    return new CreateJobFromEmployeeCall__Outputs(this);
  }
}

export class CreateJobFromEmployeeCall__Inputs {
  _call: CreateJobFromEmployeeCall;

  constructor(call: CreateJobFromEmployeeCall) {
    this._call = call;
  }

  get _employerId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _jobDataUri(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class CreateJobFromEmployeeCall__Outputs {
  _call: CreateJobFromEmployeeCall;

  constructor(call: CreateJobFromEmployeeCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class CreateJobFromEmployerCall extends ethereum.Call {
  get inputs(): CreateJobFromEmployerCall__Inputs {
    return new CreateJobFromEmployerCall__Inputs(this);
  }

  get outputs(): CreateJobFromEmployerCall__Outputs {
    return new CreateJobFromEmployerCall__Outputs(this);
  }
}

export class CreateJobFromEmployerCall__Inputs {
  _call: CreateJobFromEmployerCall;

  constructor(call: CreateJobFromEmployerCall) {
    this._call = call;
  }

  get _employeeId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _jobDataUri(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class CreateJobFromEmployerCall__Outputs {
  _call: CreateJobFromEmployerCall;

  constructor(call: CreateJobFromEmployerCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class FinishJobCall extends ethereum.Call {
  get inputs(): FinishJobCall__Inputs {
    return new FinishJobCall__Inputs(this);
  }

  get outputs(): FinishJobCall__Outputs {
    return new FinishJobCall__Outputs(this);
  }
}

export class FinishJobCall__Inputs {
  _call: FinishJobCall;

  constructor(call: FinishJobCall) {
    this._call = call;
  }

  get _jobId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class FinishJobCall__Outputs {
  _call: FinishJobCall;

  constructor(call: FinishJobCall) {
    this._call = call;
  }
}

export class RejectJobCall extends ethereum.Call {
  get inputs(): RejectJobCall__Inputs {
    return new RejectJobCall__Inputs(this);
  }

  get outputs(): RejectJobCall__Outputs {
    return new RejectJobCall__Outputs(this);
  }
}

export class RejectJobCall__Inputs {
  _call: RejectJobCall;

  constructor(call: RejectJobCall) {
    this._call = call;
  }

  get _jobId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RejectJobCall__Outputs {
  _call: RejectJobCall;

  constructor(call: RejectJobCall) {
    this._call = call;
  }
}
